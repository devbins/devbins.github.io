<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gin on devbins blog</title>
    <link>http://localhost:1313/tags/gin/</link>
    <description>Recent content in Gin on devbins blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 02 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/gin/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>改进Gin 嵌入资源路由冲突</title>
      <link>http://localhost:1313/post/gin%E8%B7%AF%E7%94%B1%E5%86%B2%E7%AA%81/</link>
      <pubDate>Wed, 02 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/gin%E8%B7%AF%E7%94%B1%E5%86%B2%E7%AA%81/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;上一篇文章讲了如何解决 &lt;code&gt;Gin&lt;/code&gt; 中嵌入资源的问题，虽然也解决了，但是还是碰到了问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gin 嵌入静态资源与路由冲突</title>
      <link>http://localhost:1313/post/gin_embed/</link>
      <pubDate>Thu, 27 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/gin_embed/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;上一篇文章讲了如何嵌入网页，但是在使用的时候碰到了路由冲突。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gin 实现上传/下载服务</title>
      <link>http://localhost:1313/post/gin%E4%B8%8A%E4%BC%A0%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/gin%E4%B8%8A%E4%BC%A0%E6%9C%8D%E5%8A%A1/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;在上一篇文章&lt;a href=&#34;https://devbins.github.io/post/go%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%92%8C%E4%B8%8B%E8%BD%BD/&#34;&gt;go实现文件上传/下载服务&lt;/a&gt;中讲到了自己实现一个文件上传服务，然而我发现&lt;a href=&#34;https://github.com/gin-gonic/gin&#34;&gt;gin-gonic/gin: Gin is a HTTP web framework written in Go (Golang).&lt;/a&gt;也默认提供了文件上传服务。&lt;/p&gt;&#xA;&lt;p&gt;本文就来看看 &lt;code&gt;Gin&lt;/code&gt; 中的文件上传服务。&lt;/p&gt;&#xA;&lt;h2 id=&#34;创建项目&#34;&gt;创建项目&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir ginupload &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ginupload&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;go mod init ginupload&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;go get -u github.com/gin-gonic/gin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;touch main.go&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;我们创建一个 &lt;code&gt;ginupload&lt;/code&gt; 的目录用来存放代码，并且使用 &lt;code&gt;go mod&lt;/code&gt; 来管理依赖。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
