<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Emacs on devbins blog</title>
    <link>http://devbins.github.io/tags/emacs/</link>
    <description>Recent content in Emacs on devbins blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 26 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://devbins.github.io/tags/emacs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>verb: Emacs 中另一个 HTTP REST client</title>
      <link>http://devbins.github.io/post/verb/</link>
      <pubDate>Wed, 26 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://devbins.github.io/post/verb/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;Emacs 中的 &lt;code&gt;restclient&lt;/code&gt; 已经归档了不在维护，所以就需要找一下其它的包来代替。&lt;/p&gt;&#xA;&lt;p&gt;找了一圈发现 &lt;a href=&#34;https://github.com/federicotdn/verb?tab=readme-ov-file&#34;&gt;federicotdn/verb: HTTP client for Emacs&lt;/a&gt; 还不错，并且也支持 &lt;code&gt;org babel&lt;/code&gt; 。&lt;/p&gt;</description>
    </item>
    <item>
      <title>自定义 Snippets</title>
      <link>http://devbins.github.io/post/custom_snippet/</link>
      <pubDate>Tue, 26 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://devbins.github.io/post/custom_snippet/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;上一篇文章讲了如何如何在 &lt;code&gt;Emacs&lt;/code&gt; 中使用 &lt;code&gt;Snippet&lt;/code&gt; 来快速编写代码，提高效率。&lt;/p&gt;&#xA;&lt;p&gt;虽然很多插件已经为我们准备好了现成的模板，但有时我们需要一些个性化的代码片段。&lt;/p&gt;&#xA;&lt;p&gt;今天，我们就一起来学习如何在Emacs中创建自己的Snippets吧！&lt;/p&gt;</description>
    </item>
    <item>
      <title>Emacs 中使用 Snippet 快速编写模板代码</title>
      <link>http://devbins.github.io/post/snippet/</link>
      <pubDate>Fri, 22 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://devbins.github.io/post/snippet/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;今天要来介绍一下 &lt;code&gt;Snippet&lt;/code&gt; ，也就是代码片段。&lt;/p&gt;&#xA;&lt;p&gt;它可以快速插入常用的、复杂的具有一定规律的模板代码，提高编写效率。&lt;/p&gt;</description>
    </item>
    <item>
      <title>在 Emacs 任意 buffer 插入时间</title>
      <link>http://devbins.github.io/post/emacs_insert_time/</link>
      <pubDate>Tue, 12 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://devbins.github.io/post/emacs_insert_time/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;有时候我们常常会需要把当前时间插入到当前文件中，找了半天发现没有现成的，我印象中是有的。&lt;/p&gt;&#xA;&lt;p&gt;既然没有就只能自己想办法了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>在 Emacs 中使用 Python 解释器</title>
      <link>http://devbins.github.io/post/emacs_python_interceptor/</link>
      <pubDate>Mon, 11 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://devbins.github.io/post/emacs_python_interceptor/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;使用 &lt;code&gt;Python&lt;/code&gt; 的知道可以在终端中进行一些代码的简单测试，验证一下想法。&lt;/p&gt;&#xA;&lt;p&gt;这个功能在 &lt;code&gt;Emacs&lt;/code&gt; 中也是能用的，今天来介绍一下。&lt;/p&gt;</description>
    </item>
    <item>
      <title>excel 转 org table</title>
      <link>http://devbins.github.io/post/excel2orgtbl/</link>
      <pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://devbins.github.io/post/excel2orgtbl/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;本文讲解如何把 &lt;code&gt;excel&lt;/code&gt; 转成 &lt;code&gt;org mode&lt;/code&gt; 表格&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用 Emacs 开发 Flutter</title>
      <link>http://devbins.github.io/post/emacs_flutter/</link>
      <pubDate>Sat, 27 Aug 2022 00:00:00 +0000</pubDate>
      <guid>http://devbins.github.io/post/emacs_flutter/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;一直都想在 &lt;code&gt;Emacs&lt;/code&gt; 中做 &lt;code&gt;flutter&lt;/code&gt; 开发，早些年用起来非常卡，这两天试了下还挺不错的，记录一下。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Emacs中的Postman</title>
      <link>http://devbins.github.io/post/restclient/</link>
      <pubDate>Sat, 29 Jan 2022 00:00:00 +0000</pubDate>
      <guid>http://devbins.github.io/post/restclient/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;在日常开发中，经常需要调试服务端返回的数据，我们常用的有 &lt;code&gt;Postman&lt;/code&gt; 、 &lt;code&gt;PostWoman&lt;/code&gt; 等等。&lt;/p&gt;&#xA;&lt;p&gt;但是我习惯了在 &lt;code&gt;Emacs&lt;/code&gt; 中做完这一切，不想去安装其他软件，于是在 &lt;code&gt;Emacs&lt;/code&gt; 中也找到了 &lt;code&gt;restclient&lt;/code&gt; 这个插件，它能满足我的需求。&lt;/p&gt;&#xA;&lt;p&gt;所以今天要来分享一下 &lt;code&gt;restclient&lt;/code&gt; 的使用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用ccls作为C/C&#43;&#43;的补全方案</title>
      <link>http://devbins.github.io/post/ccls/</link>
      <pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate>
      <guid>http://devbins.github.io/post/ccls/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;最近使用 &lt;code&gt;C/C++&lt;/code&gt; 开发，在 &lt;code&gt;Emacs&lt;/code&gt; 下使用 &lt;code&gt;Cmake&lt;/code&gt; 作为编译工具，结合 &lt;code&gt;ccls&lt;/code&gt; 进行代码补全，有着不错的体验，于是记录一下。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Windows 下的 Git 自带 GPG</title>
      <link>http://devbins.github.io/post/gitgpg/</link>
      <pubDate>Mon, 29 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://devbins.github.io/post/gitgpg/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;由于工作需要，需要使用 &lt;code&gt;Windows&lt;/code&gt; ，在 &lt;code&gt;Windows&lt;/code&gt; 中开发始终没有那么方便。最近在用 &lt;code&gt;Git&lt;/code&gt; 提交代码时想用 &lt;code&gt;GPG&lt;/code&gt; 进行签名，于是就下载了 &lt;a href=&#34;https://www.gpg4win.org/&#34;&gt;Gpg4win&lt;/a&gt; 。&lt;/p&gt;</description>
    </item>
    <item>
      <title>在 Emacs 中使用 Git Flow</title>
      <link>http://devbins.github.io/post/gitflow/</link>
      <pubDate>Sun, 12 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://devbins.github.io/post/gitflow/</guid>
      <description>&lt;h2 id=&#34;git-flow-简介&#34;&gt;Git Flow 简介&lt;/h2&gt;&#xA;&lt;p&gt;随着 &lt;code&gt;GitHub&lt;/code&gt; 的流行，越来越多人开始使用 &lt;code&gt;Git&lt;/code&gt; ， &lt;code&gt;Git&lt;/code&gt; 的强大在于我们可以随时随地的创建分支。&lt;/p&gt;&#xA;&lt;p&gt;随时随地创建分支，给我带来了极大的方便，但同时，分支太多管理起来也是非常头疼。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;Git&lt;/code&gt; 支持多人协作，如果没有一个规范的话，随着时间的变化，将会越来越难以管理。&lt;/p&gt;&#xA;&lt;p&gt;这时 &lt;a href=&#34;https://nvie.com/posts/a-successful-git-branching-model/&#34;&gt;Git Flow&lt;/a&gt; 出现了，这个分支模型，为我们管理 &lt;code&gt;Git&lt;/code&gt; 分支提供了一个模型，用来管理 &lt;code&gt;Git&lt;/code&gt; 分支，有效的减少分支混乱不堪的情况。&lt;/p&gt;</description>
    </item>
    <item>
      <title>GPG加密五：在 Emacs 中使用 GPG 加密</title>
      <link>http://devbins.github.io/post/gpg5/</link>
      <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
      <guid>http://devbins.github.io/post/gpg5/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;之前我们介绍了 &lt;code&gt;GPG&lt;/code&gt; 的使用，也介绍了用 &lt;code&gt;GPG&lt;/code&gt; 来管理自己的密码。&lt;/p&gt;&#xA;&lt;p&gt;今天我们来讲一讲在 &lt;code&gt;Emacs&lt;/code&gt; 中配合 &lt;code&gt;GPG&lt;/code&gt; 加密 &lt;code&gt;Org mode&lt;/code&gt; 。&lt;/p&gt;</description>
    </item>
    <item>
      <title>在Emacs中用PlantUML画UML</title>
      <link>http://devbins.github.io/post/plantuml/</link>
      <pubDate>Mon, 23 Sep 2019 00:00:00 +0000</pubDate>
      <guid>http://devbins.github.io/post/plantuml/</guid>
      <description>&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt;平时需要画 &lt;code&gt;UML&lt;/code&gt; 图，用的比较多的就是 &lt;a href=&#34;http://staruml.io/&#34;&gt;StarUML&lt;/a&gt; 、 &lt;code&gt;Visio&lt;/code&gt; 、 &lt;code&gt;Rational Rose&lt;/code&gt; 。其中 &lt;a href=&#34;http://staruml.io/&#34;&gt;StarUML&lt;/a&gt; 是跨平台的免费软件，相比其他的收费软件是个不错的选择。&lt;/p&gt;&#xA;&lt;p&gt;今天要介绍的是&lt;a href=&#34;http://plantuml.com/zh/index&#34;&gt;PlantUML&lt;/a&gt;它是一个开源的用文字来描述的工具，简单来说就是用文字去写出各种 &lt;code&gt;UML&lt;/code&gt; 图，而不是用鼠标去拖拽。上面介绍的工具都是通过鼠标去拖拽的方式去画出各种 &lt;code&gt;UML&lt;/code&gt; 图。可能由于是个开发的缘故，天生就喜欢纯文本的东西，解析起来方便，占用内存小，改起来也方便，只要一个文本编辑器就可以改。当然我使用的原因是可以在 &lt;code&gt;Emacs&lt;/code&gt; 中通过 &lt;code&gt;Org Mode&lt;/code&gt; 结合 &lt;code&gt;Org-Babel&lt;/code&gt; 使用，生成对应的 &lt;code&gt;UML&lt;/code&gt; 图，所见即所得。&lt;/p&gt;&#xA;&lt;p&gt;这里有一个&lt;a href=&#34;http://www.plantuml.com/plantuml/&#34;&gt;在线体验&lt;/a&gt;的网址，有兴趣可以点击链接，前去体验。&lt;/p&gt;</description>
    </item>
    <item>
      <title>在 Emacs 中用 mu4e 来收邮件</title>
      <link>http://devbins.github.io/post/mu4e/</link>
      <pubDate>Sun, 25 Nov 2018 00:00:00 +0000</pubDate>
      <guid>http://devbins.github.io/post/mu4e/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;使用 Emacs 的人喜欢把所有的事情都使用 emacs 来管理，总是把有意思的事情集成进 Emacs。其中乐趣（痛苦）只有折腾过才能体会。&lt;/p&gt;&#xA;&lt;p&gt;最近想在 Linux 中收发邮件，网页版使用起来多有不便，于是想着用 Emacs 来收发邮件岂不是很有趣。&lt;/p&gt;&#xA;&lt;p&gt;在 Emacs 中折腾邮件也是一件很费力的事，看了好多文章有用 guns、mu4e、Wander Lust 的。试了一下 mu4e 比较容易上手，就决定是它了。&lt;/p&gt;&lt;/blockquote&gt;</description>
    </item>
  </channel>
</rss>
