<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>forge on devbins blog</title>
    <link>http://devbins.github.io/tags/forge/</link>
    <description>Recent content in forge on devbins blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 13 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://devbins.github.io/tags/forge/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用Forge管理GitHub Issue</title>
      <link>http://devbins.github.io/post/forge_issue/</link>
      <pubDate>Mon, 13 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>http://devbins.github.io/post/forge_issue/</guid>
      <description>前言 在上一篇中，我聊到了在 Emacs 中使用 Forge 管理 GitHub Pull Request ，今天来讲一讲怎么管理 GitHub Issue 。 使用 Forge 是集成在 Magit 中的，所以可以在 Magit Status buffer 中使用 @ 打开 Forge 菜单，这是使用</description>
    </item>
    
    <item>
      <title>Emacs中使用Forge管理GitHub Pull Request</title>
      <link>http://devbins.github.io/post/forge/</link>
      <pubDate>Sun, 12 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>http://devbins.github.io/post/forge/</guid>
      <description>前言 本文会描述如何在 Emacs 中使用 Forge 来管理 GitHub Pull Request 。 配置 在使用之前需要先对 Forge 进行配置，主要有两步，分别是设置 GitHub 用户名和配置 GitHub Access Token 设置GitHub用户</description>
    </item>
    
  </channel>
</rss>
