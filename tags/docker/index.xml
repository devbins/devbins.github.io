<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on devbins blog</title>
    <link>http://devbins.github.io/tags/docker/</link>
    <description>Recent content in Docker on devbins blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 17 Aug 2019 00:00:00 +0000</lastBuildDate><atom:link href="http://devbins.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dockerfile</title>
      <link>http://devbins.github.io/post/dockerfile/</link>
      <pubDate>Sat, 17 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>http://devbins.github.io/post/dockerfile/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;之前总结过 Docker 的使用,讲解了 Docker 的安装、相关概念以及基本使用。里面介绍的都是如何使用别人制作好的镜像，显然是不能满足我们的需要。接下来就来讲讲私人订制自己的镜像。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>在 Docker 中用 Jenkins 搭建 Android 自动化打包</title>
      <link>http://devbins.github.io/post/jenkins/</link>
      <pubDate>Tue, 02 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>http://devbins.github.io/post/jenkins/</guid>
      <description>Jenkins 是一个持续集成的工具，帮你构建和打包自动化，不用手动做这些操作。构建完成后可以帮你上传到第三方测试平台，或者做其他一些操作。例如：发送邮件</description>
    </item>
    
    <item>
      <title>Docker 使用</title>
      <link>http://devbins.github.io/post/docker%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sat, 22 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://devbins.github.io/post/docker%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;h2 id=&#34;docker-简介&#34;&gt;Docker 简介&lt;/h2&gt;
&lt;p&gt;Docker 是一个开源的应用容器引擎。可以看成是一个特殊的环境，隔离了宿主机（电脑）和容器。做开发的时候通常会碰到在自己的电脑上没问题，放到服务器或者别人的电脑上就出问题了，通常我们会认为是环境不一致导致的，调试起来非常耗时费力。有了 Docker 这些问题迎刃而解。&lt;/p&gt;
&lt;p&gt;经常在 Linux 上做测试的人员，做完测试就不用了。在过去我们会使用虚拟机，这样做不但占据者比较大的磁盘空间，而且运行启动耗时较长，性能不高。但是用 Docker 却可以随时随地启动一个 Linux 的容器，用完就可以删除，下次要用在重新开启一个新的，速度非常快。Docker 比虚拟机来的轻巧，开启和关闭非常迅速，占用的资源少。既然 Docker 有那么多的好处，没有理由不去调戏它。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
